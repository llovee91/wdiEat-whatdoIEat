<div class="row">
<div class="col-sm-6 col-sm-offset-1" id="food-icon-container"></div>
<div class="col-sm-4">
    <h1>What do I eat?</h1>
    <form id="search-criteria" action="/result" method="post">
        <div class="form-group">
            <label>Near</label>
            <input type="text" id="location" class="form-control" name="location" placeholder="Current Location">
        </div>
        <!-- Make an hidden input to store the longitutde/latitude(cll) and the city that the user is currently accessing the app from -->
        <input type="hidden" id="cll" class="form-control" name="cll">
        <input type="hidden" id="currentCity" class="form-control" name="currentCity">

        <div class="form-group">
          <label>Search by keyword</label>
            <input type="text" id="term" class="form-control" name="term" placeholder="burger, pizza, sushi...">
        </div>

        <!-- Create a container to hold all the cuisines options -->
        <div class="form-group cuisines-container"></div>

        <div class="shake-chunk">
          <button disabled="true" type="submit" id="shake" class="btn btn-warning btn-l" onclick="audio.play()">Locating...</button>
        </div>
        <p id="location-status">Loading Current Location...
        </p>
    </form>
</div>

<script>
  var foodIcons = ["newamerican", "tradamerican", "asianfusion", "breakfast_brunch", "buffets", "chinese", "french", "german", "gluten_free", "greek", "italian", "japanese", "korean", "latin", "malaysian", "mediterranean", "mexican", "mideastern", "polish", "portuguese", "salad", "spanish", "taiwanese", "thai", "vegan", "vegetarian", "vietnamese"]

  var categories = ["American (New)", "American (Traditional)", "Asian Fusion", "Breakfast & Brunch", "Buffets", "Chinese", "French", "German", "Gluten-Free", "Greek", "Italian", "Japanese", "Korean", "Latin", "Malaysian", "Mediterranean", "Mexican", "Middle Eastern", "Polish", "Portuguese", "Salad", "Spanish", "Taiwanese", "Thai", "Vegan", "Vegetarian", "Vietnamese"]

  for (var i = 0; i < categories.length; i++) {
    var option = "<label class='form-control'><input type='checkbox' name='cuisines' class='cuisines-options' value='"+foodIcons[i]+"'>"+categories[i]+"</label>"
    $('.cuisines-container').append(option)
  }

  foodIcons.forEach(function(food){
    var image = "<img class='food-icons' src='images/"+food+".jpg' id='"+food+"'>"
    $('#food-icon-container').append(image)
  })

  $('.cuisines-options').click(function() {
    var cuisine = this.value
    $('#'+cuisine).toggleClass("active-icon")
  })

  // Create an empty variable used to hold the latitude and longitude retrieved from geolocation
  var latitude;
  var longitude;

  // Make a Post request to get an estimate of the current city and location (longitude & latitude)
  $.ajax({
    url: '//freegeoip.net/json/',
    type: 'POST',
    dataType: 'jsonp',
    success: function(location) {
      console.log('freegeoip successfully located your current city')
      current = location.city,
      cll = location.latitude.toString() + "," + location.longitude.toString()
    }
  })

  // Use the geolocation (browser dependent) to get a more accurate location of the user
  $('document').ready(function(){
    if (!navigator.geolocation) {
      console.log('Device does not support this feature') // if geolocation not supported by browser/device, inform the user
    }

    navigator.geolocation.getCurrentPosition(success, error)

    // if geolocation works, then store the current latitude and longitude into cll field
    function success(position) {
      var latitude = position.coords.latitude;
      var longitude = position.coords.longitude;
      $('#cll').val(latitude+','+longitude)
        $('#location-status').text('Current Location found!') // inform user location found
        $('#shake').removeAttr('disabled') // allow the user to proceed once finished locating
        $('#shake').text('Find Food!')
    }

    // if error..
    function error() {
      $('#location-status').text('Current Location Service Disabled (Notes: This would affect the accuracy of result)') // inform the user the result of not allowing geolocation
      $('#shake').text('Find Food!')
      $('#shake').removeAttr('disabled') // allow the user to proceed
    }
  })

  // change the color  of checkboxes if selected/deselected
  $('.cuisines-options').click(function(){
    if ($(this).parent().hasClass('checked')){
      $(this).parent().removeClass('checked')
    }
    else {
      $(this).parent().addClass('checked')
    }
  })
  // when form is submitted to make a request to yelp...
  $('#shake').click(function(){
    // if location field is empty, then use the current city retrieved from freegeoip
    if ($('#location').val() === "" && current) {
            $('#location').val(current)
          }
    if ($('#cll').val() === ""){
          $('#cll').val(cll)
        }
  })
</script>
