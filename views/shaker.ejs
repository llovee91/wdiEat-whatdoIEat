


<div class="row">
  <form id="search-criteria" action="/result" method="post">
  <div class="col-sm-7 col-sm-offset-1" id="food-icon-container"></div>
  <div class="col-sm-3 ">

<h1>What do I eat?</h1>

      <div class="form-group">
        <label>I'm looking for a restaurant near</label>
        <input type="text" id="location" class="form-control" name="location" placeholder="Current Location">
      </div>
      <!-- Make an hidden input to store the longitutde/latitude(cll) and the city that the user is currently accessing the app from -->
      <input type="hidden" id="cll" class="form-control" name="cll">
      <input type="hidden" id="currentCity" class="form-control" name="currentCity">

      <div class="form-group">
        <label>that serves</label>
        <input type="text" id="term" class="form-control" name="term" placeholder="burger, pizza, sushi...">
      </div>

      <!-- Create a container to hold all the cuisines options -->
      <!-- <div class="form-group cuisines-container"></div> -->

        <button disabled="true" type="submit" id="shake" class="btn btn-primary btn-block">Locating...</button>
      <p id="location-status">Loading Current Location...</p>

  </div>
  <!-- <div class="col-sm-3" id="right-food-icon-container"></div> -->
  </form>
</div>
<script>
  // array to hold the names of the images
  var foodIcons = ["newamerican", "tradamerican", "asianfusion", "bbq", "breakfast_brunch", "bubbletea", "chinese", "coffee", "desserts", "french", "german", "greek", "italian", "japanese", "korean", "latin", "malaysian", "mediterranean", "mexican", "mideastern", "polish", "portuguese", "spanish", "taiwanese", "tea", "thai", "vegetarian", "vietnamese"]

  // array to hold the labels for cuisines-options input fields
  var categories = ["American (New)", "American (Traditional)", "Asian Fusion", "Barbeque", "Breakfast & Brunch", "Bubble Tea", "Chinese", "Coffee", "Dessert", "French", "German", "Greek", "Italian", "Japanese", "Korean", "Latin", "Malaysian", "Mediterranean", "Mexican", "Middle Eastern", "Polish", "Portuguese", "Spanish", "Taiwanese", "Tearooms", "Thai", "Vegetarian", "Vietnamese"]

  // add the input fields for the cuisines-options
  // for (var i = 0; i < categories.length; i++) {
  //   var option = "<label class='form-control'><input type='checkbox' name='cuisines' class='cuisines-options' value='"+foodIcons[i]+"'>"+categories[i]+"</label>"
  //   $('.cuisines-container').append(option)
  // }
// <img class='food-icons' src='images/"+food+".jpg' id='"+food+"'>
  var imageCount = 0
  // add the images for each cuisine
  foodIcons.forEach(function(food){
    var image = "<label><input type='checkbox' name='cuisines' class='cuisines-options' value='"+food+"'><div id='"+ food +"' class='food-icons' style='background-image: url(images/"+food+".jpg)'><span>"+categories[imageCount]+"</span></div></input></label>"
    // if (imageCount < (foodIcons.length/2)) {
    //   $('#left-food-icon-container').append(image)
    // } else {
    //   $('#right-food-icon-container').append(image)
    // }
    $('#food-icon-container').append(image)

    imageCount += 1
  })

  // toggle image opacities when the associated cuisine is selected/deselected
  $('.cuisines-options').click(function() {
    $('#'+this.value).toggleClass("active-icon")
    clearFlash()
  })

  $('.cuisines-options').on('mouseout', function() {
    console.log('lovely')
  })


  // Create an empty variable used to hold the latitude and longitude retrieved from geolocation
  var latitude = null
  var longitude = null

  // Make a Post request to get an estimate of the current city and location (longitude & latitude)
  $.ajax({
    url: '//freegeoip.net/json/',
    type: 'POST',
    dataType: 'jsonp',
    success: function(location) {
      console.log('freegeoip successfully located your current city')
      current = location.city,
      cll = location.latitude.toString() + "," + location.longitude.toString()
    }
  })

  // Use the geolocation (browser dependent) to get a more accurate location of the user
  $('document').ready(function(){
    if (!navigator.geolocation) {
      console.log('Device does not support this feature') // if geolocation not supported by browser/device, inform the user
    }

    navigator.geolocation.getCurrentPosition(success, error)

    // if geolocation works, then store the current latitude and longitude into cll field
    function success(position) {
      var latitude = position.coords.latitude;
      var longitude = position.coords.longitude;
      $('#cll').val(latitude+','+longitude)
        $('#location-status').text('Current Location found!') // inform user location found
        $('#shake').removeAttr('disabled') // allow the user to proceed once finished locating
        $('#shake').text('Find Food!')
    }

    // if error..
    function error() {
      $('#location-status').text('Current Location Service Disabled (Notes: This would affect the accuracy of result)') // inform the user the result of not allowing geolocation
      $('#shake').text('Find Food!')
      $('#shake').removeAttr('disabled') // allow the user to proceed
    }
  })

  // when form is submitted to make a request to yelp...
  $('#shake').click(function(){
    // if location field is empty, then use the current city retrieved from freegeoip
    if ($('#location').val() === "" && current) {
      $('#location').val(current)
    }
    if ($('#cll').val() === ""){
      $('#cll').val(cll)
    }
  })

  var clear =  null
  var random = null
  function clearFlash() {
    clearInterval(foodIconFlash)
    $('.food-icons').removeClass('flash-icon')
  }
  var foodIconFlash = setInterval(function() {
    random = Math.floor(Math.random()*27)
    if (clear || clear == 0) {
      $($('.food-icons')[clear]).toggleClass('flash-icon')
    }
    clear = null
       $($('.food-icons')[random]).toggleClass('flash-icon')
       clear = random
  }, 2000)
</script>
